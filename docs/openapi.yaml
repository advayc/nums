openapi: 3.0.3
info:
  title: nums API
  version: "1.0.0"
  description: Simple hit counter and badge service.
servers:
  - url: https://nums.advay.ca
paths:
  /hit:
    get:
      summary: Increment and return hits for an id
      description: One of X-Auth-Token header or token query is required.
      parameters:
        - in: query
          name: id
          schema: { type: string }
          required: false
          description: Counter id (default home)
        - in: header
          name: X-Auth-Token
          schema: { type: string }
          required: false
          description: Secret token (required unless provided as token query)
        - in: query
          name: token
          schema: { type: string }
          required: false
          description: Secret token (alternative to header)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  hits: { type: integer }
                  source: { type: string, description: Optional source indicator (redis or memory) }
        '401': { description: Unauthorized }
    post:
      summary: Increment and return hits for an id (POST)
      description: One of X-Auth-Token header or token query is required.
      parameters:
        - in: query
          name: id
          schema: { type: string }
          description: Counter id (default home)
        - in: header
          name: X-Auth-Token
          schema: { type: string }
          required: false
          description: Secret token for authentication (required unless token query provided)
        - in: query
          name: token
          schema: { type: string }
          required: false
          description: Secret token (alternative to header)
        - in: query
          name: url
          schema: { type: string }
          required: false
          description: Optional custom deployment URL (defaults to https://nums.advay.ca)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  hits: { type: integer }
                  source: { type: string, description: Optional source indicator (redis or memory) }
        '401': { description: Unauthorized }
  /count:
    get:
      summary: Get current count (JSON)
      parameters:
        - in: query
          name: id
          schema: { type: string }
        - in: query
          name: format
          schema: { type: string, enum: [txt, text] }
          description: Return plain text when set to txt or text
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  hits: { type: integer }
                  source: { type: string }
  /count.txt:
    get:
      summary: Get current count (plain text)
      parameters:
        - in: query
          name: id
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: "73"
  /badge:
    get:
      summary: Render SVG badge
      parameters:
        - in: query
          name: id
          schema: { type: string }
        - in: query
          name: label
          schema: { type: string }
          example: views
        - in: query
          name: style
          schema: { type: string }
          example: terminal
          description: Use terminal/mono for terminal style; omit for classic
        - in: query
          name: color
          schema: { type: string }
          example: blue
          description: Classic badge color (ignored for terminal style)
        - in: query
          name: bg
          schema: { type: string }
          example: "#101414"
        - in: query
          name: labelColor
          schema: { type: string }
        - in: query
          name: valueColor
          schema: { type: string }
        - in: query
          name: font
          schema: { type: string }
      responses:
        '200': { description: SVG image }
  /badge.json:
    get:
      summary: Shields endpoint JSON
      parameters:
        - in: query
          name: id
          schema: { type: string }
        - in: query
          name: label
          schema: { type: string }
          example: views
        - in: query
          name: color
          schema: { type: string }
          example: blue
        - in: query
          name: cacheSeconds
          schema: { type: integer }
          example: 30
          description: Clamped to 30â€“3600 seconds
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemaVersion: { type: integer, example: 1 }
                  label: { type: string, example: views }
                  message: { type: string, example: "73" }
                  color: { type: string, example: blue }
                  cacheSeconds: { type: integer, example: 30 }
